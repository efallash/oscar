<!-- oscar_table.launch: Launch file for OSCAR robot-->
<!-- OSCAR: Open Source Cognitive Applied Robot -->
<!-- Author: Emanuel Fallas -->
<!-- email: efallashdez@gmail.com -->
<!-- Published under GNU GPLv3 license -->

<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <!-- gazebo arguments -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>

  <!--Controller selection argument-->
  <arg name="controller_number" default="1"/>

  <!-- Option to include a fixed load in the grippers-->
  <arg name="load" default="false"/>
  <arg name="mass" default="0.001"/>


  <!-- Launch the table world-->
  <include file="$(find oscar_gazebo)/launch/table_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!--LAUNCH OSCAR ROBOT-->

  <!-- arguments for the urdf xacro file, rviz visualization and namespace -->
  <arg name="model" default="$(find oscar_description)/urdf/oscar.urdf"/>
  <param name="robot_description" command="$(find xacro)/xacro $(find oscar_description)/urdf/oscar.urdf.xacro load:=$(arg load) mass:=$(arg mass)" />
  
  <!-- Spawn OSCAR in gazebo -->
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-urdf -model oscar -param robot_description"
    output="screen" />

  <!-- Start controllers -->
  <include file="$(find oscar_control)/launch/oscar_control.launch">
    <arg name="controller_num" value="$(arg controller_number)"/>
  </include>

  <!-- Launch moveit -->
   <include file="$(find oscar_moveit_config)/launch/move_group.launch"/>

  <!-- Commanding Services -->
  <node name="oscar_command_server" pkg="oscar_common"
    type="oscar_command_services.py"/>

</launch>
